<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPersonaje</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Valores inciales

velocidad = 4;

llaveN = false;
llaveD = false;
llaveM = false;
llaveP = false;
Goal = false;
Muerte = false;
GoalMeta = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moviemiento por teclas 

if (!place_meeting(x+4,y,objMuro))
   {  
  if(keyboard_check(vk_right))
   {
   x= x+4;
   }
   }
   
if(!place_meeting(x-4,y,objMuro))
   {  
  if(keyboard_check(vk_left))
   {
   x= x-4;
   }
   }
   
if(!place_meeting(x,y+4,objMuro))
   {  
  if(keyboard_check(vk_down))
   {
   y= y+4;
   }
   }
   
if(!place_meeting(x,y-4,objMuro))
   {  
  if(keyboard_check(vk_up))
   {
   y= y-4;
   }
   }
   
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Codificación llaves

if (place_meeting(x, y, objLlaveNegra))
    {
    llaveN = true;
    with (objLlaveNegra){instance_destroy();}
    audio_play_sound(sndLlaves,2, false);
    }
    
if (place_meeting(x, y, objLlaveDorada))
    {
    llaveD = true;
    with (objLlaveDorada){instance_destroy();}
    audio_play_sound(sndLlaves,2, false);
    }
    
if (place_meeting(x, y, objLlaveMorada))
    {
    llaveM = true;
    with (objLlaveMorada){instance_destroy();}
    audio_play_sound(sndLlaves,2, false);
    }
    
if (place_meeting(x, y, objLlavePlateada))
    {
    llaveP = true;
    with (objLlavePlateada){instance_destroy();}
    audio_play_sound(sndLlaves,2, false);
    }
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Codificación puertas

if (llaveN)
    {
    if (place_meeting(x+4, y, objPuertaNegra))||
    (place_meeting(x-4, y, objPuertaNegra))||
    (place_meeting(x, y-4, objPuertaNegra))||
    (place_meeting(x, y+4, objPuertaNegra))
    {
    with (objPuertaNegra) {instance_destroy();}
    audio_play_sound(sndPuertas,2, false);
    }
    }
    
 if (llaveD)
    {
    if (place_meeting(x+4, y, objPuertaDorada))||
    (place_meeting(x-4, y, objPuertaDorada))||
    (place_meeting(x, y-4, objPuertaDorada))||
    (place_meeting(x, y+4, objPuertaDorada))
    {
    with (objPuertaDorada) {instance_destroy();}
    audio_play_sound(sndPuertas,2, false);
    }
    }
    
 if (llaveM)
    {
    if (place_meeting(x+4, y, objPuertaMorada))||
    (place_meeting(x-4, y, objPuertaMorada))||
    (place_meeting(x, y-4, objPuertaMorada))||
    (place_meeting(x, y+4, objPuertaMorada))
    {
    with (objPuertaMorada) {instance_destroy();}
    audio_play_sound(sndPuertas,2, false);
    }
    }
    
 if (llaveP)
    {
    if (place_meeting(x+4, y, objPuertaPlateada))||
    (place_meeting(x-4, y, objPuertaPlateada))||
    (place_meeting(x, y-4, objPuertaPlateada))||
    (place_meeting(x, y+4, objPuertaPlateada))
    {
    with (objPuertaPlateada) {instance_destroy();}
    audio_play_sound(sndPuertas,2, false);
    }
    }   
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cambio de nivel y Sonido Goal Y Muerte

if (place_meeting(x,y, objGoal))
    {
    Goal = true;
    with(objGoal){room_goto_next();}
    audio_play_sound (sndGoal,2,false);
    }
    
if (place_meeting(x,y, objGoalMeta))
    {
    GoalMeta = true;
    with(objGoalMeta){room_goto(NivelMeta);}
    audio_play_sound (sndGoal,2,false);
    }
    
if (place_meeting(x,y, objEnemigoVertical))
    {
    Muerte = true;
    with(objPersonaje){room_goto(NivelGameOver);}
    audio_play_sound (sndMuerte,2,false);
    }
    
if (place_meeting(x,y, objEnemigoHorizontal))
    {
    Muerte = true;
    with(objPersonaje){room_goto(NivelGameOver);}
    audio_play_sound (sndMuerte,2,false);
    }
    
if (place_meeting(x,y, objEnemigoVertical2))
    {
    Muerte = true;
    with(objPersonaje){room_goto(NivelGameOver);}
    audio_play_sound (sndMuerte,2,false);
    }
    
if (place_meeting(x,y, objEnemigoHorizontal2))
    {
    Muerte = true;
    with(objPersonaje){room_goto(NivelGameOver);}
    audio_play_sound (sndMuerte,2,false);
    }
    
if (place_meeting(x,y, objEnemigoArribaAbajo))
    {
    Muerte = true;
    with(objPersonaje){room_goto(NivelGameOver);}
    audio_play_sound (sndMuerte,2,false);
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cambio de sprites


if (keyboard_check(vk_right))
 {
 sprite_index=sprPersonajeDerecha;
 }

if (keyboard_check(vk_left))
 {
 sprite_index=sprPersonajeIzq;
 }
 
if (keyboard_check(vk_down))
 {
 sprite_index=sprPersonajeAbajo;
 }
 
if (keyboard_check(vk_up))
 {
 sprite_index=sprPersonajeArriba;
 }
 
if (keyboard_check(vk_nokey))
 {
 sprite_index=sprPersonaje;
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
